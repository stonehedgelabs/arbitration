use serde::{Deserialize, Serialize};

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PlayByPlayResponse {
    #[serde(rename = "Game")]
    pub game: PlayByPlayGame,
    #[serde(rename = "Plays")]
    pub plays: Vec<Play>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PlayByPlayGame {
    #[serde(rename = "GameID")]
    pub game_id: i64,
    #[serde(rename = "Season")]
    pub season: i32,
    #[serde(rename = "SeasonType")]
    pub season_type: i32,
    #[serde(rename = "Status")]
    pub status: Option<String>,
    #[serde(rename = "Day")]
    pub day: String,
    #[serde(rename = "DateTime")]
    pub date_time: String,
    #[serde(rename = "AwayTeam")]
    pub away_team: String,
    #[serde(rename = "HomeTeam")]
    pub home_team: String,
    #[serde(rename = "AwayTeamID")]
    pub away_team_id: i32,
    #[serde(rename = "HomeTeamID")]
    pub home_team_id: i32,
    #[serde(rename = "RescheduledGameID")]
    pub rescheduled_game_id: Option<i64>,
    #[serde(rename = "StadiumID")]
    pub stadium_id: i32,
    #[serde(rename = "Channel")]
    pub channel: Option<String>,
    #[serde(rename = "Inning")]
    pub inning: Option<i32>,
    #[serde(rename = "InningHalf")]
    pub inning_half: Option<String>,
    #[serde(rename = "AwayTeamRuns")]
    pub away_team_runs: Option<i32>,
    #[serde(rename = "HomeTeamRuns")]
    pub home_team_runs: Option<i32>,
    #[serde(rename = "AwayTeamHits")]
    pub away_team_hits: Option<i32>,
    #[serde(rename = "HomeTeamHits")]
    pub home_team_hits: Option<i32>,
    #[serde(rename = "AwayTeamErrors")]
    pub away_team_errors: Option<i32>,
    #[serde(rename = "HomeTeamErrors")]
    pub home_team_errors: Option<i32>,
    #[serde(rename = "WinningPitcherID")]
    pub winning_pitcher_id: Option<i64>,
    #[serde(rename = "LosingPitcherID")]
    pub losing_pitcher_id: Option<i64>,
    #[serde(rename = "SavingPitcherID")]
    pub saving_pitcher_id: Option<i64>,
    #[serde(rename = "Attendance")]
    pub attendance: Option<i32>,
    #[serde(rename = "AwayTeamProbablePitcherID")]
    pub away_team_probable_pitcher_id: Option<i64>,
    #[serde(rename = "HomeTeamProbablePitcherID")]
    pub home_team_probable_pitcher_id: Option<i64>,
    #[serde(rename = "Outs")]
    pub outs: Option<i32>,
    #[serde(rename = "Balls")]
    pub balls: Option<i32>,
    #[serde(rename = "Strikes")]
    pub strikes: Option<i32>,
    #[serde(rename = "CurrentPitcherID")]
    pub current_pitcher_id: Option<i64>,
    #[serde(rename = "CurrentHitterID")]
    pub current_hitter_id: Option<i64>,
    #[serde(rename = "AwayTeamStartingPitcherID")]
    pub away_team_starting_pitcher_id: Option<i64>,
    #[serde(rename = "HomeTeamStartingPitcherID")]
    pub home_team_starting_pitcher_id: Option<i64>,
    #[serde(rename = "CurrentPitchingTeamID")]
    pub current_pitching_team_id: Option<i32>,
    #[serde(rename = "CurrentHittingTeamID")]
    pub current_hitting_team_id: Option<i32>,
    #[serde(rename = "PointSpread")]
    pub point_spread: Option<f64>,
    #[serde(rename = "OverUnder")]
    pub over_under: Option<f64>,
    #[serde(rename = "AwayTeamMoneyLine")]
    pub away_team_money_line: Option<i32>,
    #[serde(rename = "HomeTeamMoneyLine")]
    pub home_team_money_line: Option<i32>,
    #[serde(rename = "ForecastTempLow")]
    pub forecast_temp_low: Option<i32>,
    #[serde(rename = "ForecastTempHigh")]
    pub forecast_temp_high: Option<i32>,
    #[serde(rename = "ForecastDescription")]
    pub forecast_description: Option<String>,
    #[serde(rename = "ForecastWindChill")]
    pub forecast_wind_chill: Option<i32>,
    #[serde(rename = "ForecastWindSpeed")]
    pub forecast_wind_speed: Option<i32>,
    #[serde(rename = "ForecastWindDirection")]
    pub forecast_wind_direction: Option<i32>,
    #[serde(rename = "RescheduledFromGameID")]
    pub rescheduled_from_game_id: Option<i64>,
    #[serde(rename = "RunnerOnFirst")]
    pub runner_on_first: Option<bool>,
    #[serde(rename = "RunnerOnSecond")]
    pub runner_on_second: Option<bool>,
    #[serde(rename = "RunnerOnThird")]
    pub runner_on_third: Option<bool>,
    #[serde(rename = "AwayTeamStartingPitcher")]
    pub away_team_starting_pitcher: Option<String>,
    #[serde(rename = "HomeTeamStartingPitcher")]
    pub home_team_starting_pitcher: Option<String>,
    #[serde(rename = "CurrentPitcher")]
    pub current_pitcher: Option<String>,
    #[serde(rename = "CurrentHitter")]
    pub current_hitter: Option<String>,
    #[serde(rename = "WinningPitcher")]
    pub winning_pitcher: Option<String>,
    #[serde(rename = "LosingPitcher")]
    pub losing_pitcher: Option<String>,
    #[serde(rename = "SavingPitcher")]
    pub saving_pitcher: Option<String>,
    #[serde(rename = "DueUpHitterID1")]
    pub due_up_hitter_id1: Option<i64>,
    #[serde(rename = "DueUpHitterID2")]
    pub due_up_hitter_id2: Option<i64>,
    #[serde(rename = "DueUpHitterID3")]
    pub due_up_hitter_id3: Option<i64>,
    #[serde(rename = "GlobalGameID")]
    pub global_game_id: i64,
    #[serde(rename = "GlobalAwayTeamID")]
    pub global_away_team_id: i64,
    #[serde(rename = "GlobalHomeTeamID")]
    pub global_home_team_id: i64,
    #[serde(rename = "PointSpreadAwayTeamMoneyLine")]
    pub point_spread_away_team_money_line: Option<i32>,
    #[serde(rename = "PointSpreadHomeTeamMoneyLine")]
    pub point_spread_home_team_money_line: Option<i32>,
    #[serde(rename = "LastPlay")]
    pub last_play: Option<String>,
    #[serde(rename = "IsClosed")]
    pub is_closed: Option<bool>,
    #[serde(rename = "Updated")]
    pub updated: Option<String>,
    #[serde(rename = "GameEndDateTime")]
    pub game_end_date_time: Option<String>,
    #[serde(rename = "HomeRotationNumber")]
    pub home_rotation_number: Option<i32>,
    #[serde(rename = "AwayRotationNumber")]
    pub away_rotation_number: Option<i32>,
    #[serde(rename = "NeutralVenue")]
    pub neutral_venue: Option<bool>,
    #[serde(rename = "InningDescription")]
    pub inning_description: Option<String>,
    #[serde(rename = "OverPayout")]
    pub over_payout: Option<i32>,
    #[serde(rename = "UnderPayout")]
    pub under_payout: Option<i32>,
    #[serde(rename = "DateTimeUTC")]
    pub date_time_utc: Option<String>,
    #[serde(rename = "HomeTeamOpener")]
    pub home_team_opener: Option<bool>,
    #[serde(rename = "AwayTeamOpener")]
    pub away_team_opener: Option<bool>,
    #[serde(rename = "SuspensionResumeDay")]
    pub suspension_resume_day: Option<String>,
    #[serde(rename = "SuspensionResumeDateTime")]
    pub suspension_resume_date_time: Option<String>,
    #[serde(rename = "SeriesInfo")]
    pub series_info: SeriesInfo,
    #[serde(rename = "Innings")]
    pub innings: Vec<PlayByPlayInning>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct SeriesInfo {
    #[serde(rename = "HomeTeamWins")]
    pub home_team_wins: i32,
    #[serde(rename = "AwayTeamWins")]
    pub away_team_wins: i32,
    #[serde(rename = "GameNumber")]
    pub game_number: i32,
    #[serde(rename = "MaxLength")]
    pub max_length: i32,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PlayByPlayInning {
    #[serde(rename = "InningID")]
    pub inning_id: i64,
    #[serde(rename = "GameID")]
    pub game_id: i64,
    #[serde(rename = "InningNumber")]
    pub inning_number: i32,
    #[serde(rename = "AwayTeamRuns")]
    pub away_team_runs: i32,
    #[serde(rename = "HomeTeamRuns")]
    pub home_team_runs: i32,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Play {
    #[serde(rename = "PlayID")]
    pub play_id: i64,
    #[serde(rename = "InningID")]
    pub inning_id: i64,
    #[serde(rename = "InningNumber")]
    pub inning_number: i32,
    #[serde(rename = "InningHalf")]
    pub inning_half: String,
    #[serde(rename = "PlayNumber")]
    pub play_number: i32,
    #[serde(rename = "InningBatterNumber")]
    pub inning_batter_number: i32,
    #[serde(rename = "AwayTeamRuns")]
    pub away_team_runs: i32,
    #[serde(rename = "HomeTeamRuns")]
    pub home_team_runs: i32,
    #[serde(rename = "HitterID")]
    pub hitter_id: i64,
    #[serde(rename = "PitcherID")]
    pub pitcher_id: i64,
    #[serde(rename = "HitterTeamID")]
    pub hitter_team_id: i32,
    #[serde(rename = "PitcherTeamID")]
    pub pitcher_team_id: i32,
    #[serde(rename = "HitterName")]
    pub hitter_name: String,
    #[serde(rename = "PitcherName")]
    pub pitcher_name: String,
    #[serde(rename = "PitcherThrowHand")]
    pub pitcher_throw_hand: String,
    #[serde(rename = "HitterBatHand")]
    pub hitter_bat_hand: String,
    #[serde(rename = "HitterPosition")]
    pub hitter_position: String,
    #[serde(rename = "Outs")]
    pub outs: i32,
    #[serde(rename = "Balls")]
    pub balls: i32,
    #[serde(rename = "Strikes")]
    pub strikes: i32,
    #[serde(rename = "PitchNumberThisAtBat")]
    pub pitch_number_this_at_bat: i32,
    #[serde(rename = "Result")]
    pub result: Option<String>,
    #[serde(rename = "NumberOfOutsOnPlay")]
    pub number_of_outs_on_play: i32,
    #[serde(rename = "RunsBattedIn")]
    pub runs_batted_in: i32,
    #[serde(rename = "AtBat")]
    pub at_bat: bool,
    #[serde(rename = "Strikeout")]
    pub strikeout: bool,
    #[serde(rename = "Walk")]
    pub walk: bool,
    #[serde(rename = "Hit")]
    pub hit: bool,
    #[serde(rename = "Out")]
    pub out: bool,
    #[serde(rename = "Sacrifice")]
    pub sacrifice: bool,
    #[serde(rename = "Error")]
    pub error: bool,
    #[serde(rename = "Updated")]
    pub updated: String,
    #[serde(rename = "Description")]
    pub description: Option<String>,
    #[serde(rename = "Runner1ID")]
    pub runner1_id: Option<i64>,
    #[serde(rename = "Runner2ID")]
    pub runner2_id: Option<i64>,
    #[serde(rename = "Runner3ID")]
    pub runner3_id: Option<i64>,
    #[serde(rename = "Pitches")]
    pub pitches: Vec<Pitch>,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct Pitch {
    #[serde(rename = "PitchID")]
    pub pitch_id: i64,
    #[serde(rename = "PlayID")]
    pub play_id: i64,
    #[serde(rename = "PitchNumberThisAtBat")]
    pub pitch_number_this_at_bat: i32,
    #[serde(rename = "PitcherID")]
    pub pitcher_id: i64,
    #[serde(rename = "HitterID")]
    pub hitter_id: i64,
    #[serde(rename = "Outs")]
    pub outs: i32,
    #[serde(rename = "BallsBeforePitch")]
    pub balls_before_pitch: i32,
    #[serde(rename = "StrikesBeforePitch")]
    pub strikes_before_pitch: i32,
    #[serde(rename = "Strike")]
    pub strike: bool,
    #[serde(rename = "Ball")]
    pub ball: bool,
    #[serde(rename = "Foul")]
    pub foul: bool,
    #[serde(rename = "Swinging")]
    pub swinging: bool,
    #[serde(rename = "Looking")]
    pub looking: bool,
}

#[derive(Debug, Clone, Serialize, Deserialize)]
pub struct PlayByPlayApiResponse {
    pub data: PlayByPlayResponse,
    pub league: String,
}
